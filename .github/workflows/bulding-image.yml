name: BuildingImageAndDeploying
on:
  push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main
  # # Also trigger on page_build, as well as release created events
  # page_build:
  # release:
  #   types: # This configuration does not affect the page_build event above
  #     - released

# published
# - unpublished
# - created
# - edited
# - deleted
# - prereleased
# - released
jobs:
  building:
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push ${{ steps.get_version.outputs.VERSION }}
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile.Production
          context: .
          push: true
          tags: aliabdalla/elirp:${{ steps.get_version.outputs.VERSION }},aliabdalla/elirp:latest


  depoying:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Get the version
          id: get_version
          run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - uses: actions/checkout@v1
      - name: 'Deploy'
        uses: 'deliverybot/helm@v1'
        with:
          release: 'elirp-'${{ steps.get_version.outputs.VERSION }}
          namespace: 'default'
          version: ${{ steps.get_version.outputs.VERSION }}
          chart: 'elirp'
          token: '${{ github.token }}'
          # values: |
          #   name: foobar
          # value-files: >-
          # [
          #   "values.yaml",
          #   "values.production.yaml"
          # ]
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
