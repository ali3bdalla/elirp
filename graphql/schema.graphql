
"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")
"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")
# scalar DataGridAttribute @scalar(class: "App\\GraphQL\\Scalars\\DataGridAttribute")


#import models.graphql
#import types.graphql
#   orderBy: _ @orderBy(columns: ["id", "name","email","enabled","created_at"])
type Query @guard {

    DashboardSalesChartQuery: ChartData
    me: User @auth
    getUsers(trashed: Trashed @trashed,enabled: Int! = 1,
    search: String! = "" @search(within: "users_index") ,
  ): [User!]! @paginate
#  getCompanies(trashed: Trashed @trashed,enabled: Int! = 1,
#    search: String! = "" @search(within: "companies_index") ,
#  ): [Company!]! @paginate

    getUser(id: ID!): User! @find
    getTransactions(trashed: Trashed @trashed): [Transaction!]! @paginate
    totalActiveUsers: Int!  @aggregate(model: "User", column: "id", function: count)
    totalInActiveUsers: Int!  @aggregate(model: "User", column: "id", function: count)
    totalUsers: Int!  @aggregate(model: "User", column: "id", function: count)



    getItems(trashed: Trashed @trashed,
      search: String! = ""
      @search(within: "items_index") ,
  ): [Item!]! @paginate
    getItem(id: ID!): Item! @find
    totalItems: Int!  @aggregate(model: "Item", column: "id", function: count)

    getContacts(trashed: Trashed @trashed,
     is_vendor: String = "" @WhereInSearch,
    is_customer: String = "" @WhereInSearch,
    search: String! = "" @search(within: "contacts_index") ,
    orderBy: OrderByInput  @orderByInSearch(columns: ["id", "name","email","enabled","created_at"])
  ): [Contact!]! @paginate
    getContact(id: ID!): Contact! @find
    totalCustomers: Int!  @eq(key: "is_customer",value: true)  @aggregate(model: "Contact", column: "id", function: count)
    totalVendors: Int! @eq(key: "is_vendor",value: true)  @aggregate(model: "Contact", column: "id", function: count)


    getAccounts(trashed: Trashed @trashed,
    search: String! = "" @search(within: "accounts_index") ,
  ): [Account!]! @paginate
    getAccount(id: ID!): Account! @find
    totalAccounts: Int!  @aggregate(model: "Account", column: "id", function: count)

    documentStatuses(type: String = ""): [EnumOption]

    getDocuments(trashed: Trashed @trashed,
     type: String = "" @WhereInSearch,
    search: String! = "" @search(within: "documents_index") ,
    orderBy: OrderByInput  @orderByInSearch(columns: ["id","document_number","created_at"])
  ): [Document!]! @paginate
    getDocument(id: ID!): Document! @find
    totalBills: Int!  @eq(key: "type",value: "BILL")  @aggregate(model: "Document", column: "id", function: count)
    totalInvoices: Int! @eq(key: "type",value: "INVOICE")  @aggregate(model: "Document", column: "id", function: count)
    totalInvoicesAmount: Float! @eq(key: "type",value: "INVOICE")  @aggregate(model: "Document", column: "amount",
      function: sum)

}
